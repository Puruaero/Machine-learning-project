rm(list = ls())
# install.packages('lubridate')
# install.packages("caret")
# install.packages("randomForest")
# require(caret)
library(lubridate)
library(mice)
library(MASS)
# library(randomForest)
library(plyr)
library(caret)
library(gbm)


getmode <- function(v) {
  uniqv <- unique(v)
  uniqv[which.max(tabulate(match(v, uniqv)))]
}

training <- read.csv("combined.csv",na.strings=c(""," ","NA"))
info <- read.csv("avars1.csv",na.strings=c(""," ","NA"))
info<-data.frame(info$id,info$geslacht, info$leeftijd, info$lftdcat, info$belbezig, info$brutocat, info$oplzon, info$simpc)
info<-rename(info,c("info.id"="id","info.geslacht"="gender", "info.leeftijd"="age", "info.lftdcat"="agecat", "info.belbezig"="occupation", "info.brutocat"="grosscat", "info.oplzon"="educ", "info.simpc"="simpc"))


info$simpc<-as.factor(info$simpc)
info$agecat<-as.ordered(info$agecat)
info$age<-as.integer(info$age)
info$educ<-as.ordered(info$educ)
info$grosscat<-as.ordered(info$grosscat)
info$occupation<-as.factor(info$occupation)
info$gender<-as.factor(info$gender)




training$startsec<-period_to_seconds(hms(training$starttime))
training$endsec<-period_to_seconds(hms(training$endtime))


training$ampm<-am(hms(training$endtime))
training$ampm<-as.factor(training$ampm)


training$startday<-mday(dmy(training$startdate))
training$startdatw<-wday(dmy(training$startdate))
training$startdatw<-as.factor(training$startdatw)
training$endday<-mday(dmy(training$enddate))


training$month<-month(dmy(training$startdate))
training$year<-year(dmy(training$startdate))


training$core = factor(training$core, levels=c(levels(training$core), "leisure"))
training$core[is.na(training$core)] = "leisure"
training$interesting <- factor(training$interesting)
training$interesting<-as.ordered(training$interesting)


training$duration[is.na(training$duration)] <- round(mean(training$duration,na.rm = TRUE))
training$enjoy[is.na(training$enjoy)] <- round(mean(training$enjoy,na.rm = TRUE))


training$endday[is.na(training$endday)] <- training$startday[is.na(training$endday)]


training$startsec[is.na(training$startsec)] <- round(mean(training$startsec,na.rm = TRUE))


training$ampm[is.na(training$ampm)] <- (getmode(training$ampm))


training$endsec[is.na(training$endsec)] <- training$startsec[is.na(training$endsec)]+training$duration[is.na(training$endsec)]


training$endtime=NULL
training$starttime=NULL
training$startdate=NULL
training$enddate=NULL




IDs <- split( training , f = training$id )




clear1<-data.frame( sapply( IDs , function(x) round(getmode( x$clear )) ))
clear1<-setNames(cbind(rownames(clear1), clear1, row.names = NULL), c("id", "clearm"))
training <- merge(training, clear1, by.x="id", by.y="id", sort=FALSE)


difficult1<-data.frame( sapply( IDs , function(x) round(getmode( x$difficult ) )))
difficult1<-setNames(cbind(rownames(difficult1), difficult1, row.names = NULL), c("id", "difficultm"))
training <- merge(training, difficult1, by.x="id", by.y="id", sort=FALSE)


interesting1<-data.frame( sapply( IDs , function(x) round(getmode( as.integer(x$interesting)) ) ))
interesting1<-setNames(cbind(rownames(interesting1), interesting1, row.names = NULL), c("id", "interestingm"))
training <- merge(training, interesting1, by.x="id", by.y="id", sort=FALSE)


thinking1<-data.frame( sapply( IDs , function(x) round(getmode( x$thinking ) )))
thinking1<-setNames(cbind(rownames(thinking1), thinking1, row.names = NULL), c("id", "thinkingm"))
training <- merge(training, thinking1, by.x="id", by.y="id", sort=FALSE)


enjoy1<-data.frame( sapply( IDs , function(x) round(getmode( x$enjoy ) ) ))
enjoy1<-setNames(cbind(rownames(enjoy1), enjoy1, row.names = NULL), c("id", "enjoym"))
training <- merge(training, enjoy1, by.x="id", by.y="id", sort=FALSE)


training$interestingm<-as.ordered(training$interestingm)
training$clear<-as.ordered(training$clear)
training$enjoy<-as.ordered(training$enjoy)
training$difficult<-as.ordered(training$difficult)
training$thinking<-as.ordered(training$thinking)




training$clearm<-as.ordered(training$clearm)
training$enjoym<-as.ordered(training$enjoym)
training$difficultm<-as.ordered(training$difficultm)
training$thinkingm<-as.ordered(training$thinkingm)


training <- merge(training, info, by.x="id", by.y="id",all.x=TRUE, sort=FALSE)


training$year<-as.factor(training$year)
training$startday<-as.ordered(training$startday)
training$year<-as.factor(training$month)


#TEST DATA #####################
test <- read.csv("test.csv",na.strings=c(""," ","NA"))


test$startsec<-period_to_seconds(hms(test$starttime))
test$endsec<-period_to_seconds(hms(test$endtime))


test$ampm<-am(hms(test$endtime))
test$ampm<-as.factor(test$ampm)


test$startday<-mday(dmy(test$startdate))
test$startdatw<-wday(dmy(test$startdate))
test$startdatw<-as.factor(test$startdatw)
test$endday<-mday(dmy(test$enddate))


test$month<-month(dmy(test$startdate))
test$year<-year(dmy(test$startdate))


test$core = factor(test$core, levels=c(levels(test$core), "leisure"))
test$core[is.na(test$core)] = "leisure"


test$startsec[is.na(test$startsec)] <- round(mean(test$startsec,na.rm = TRUE))
test$ampm[is.na(test$ampm)] <- (getmode(test$ampm))


test$endsec[is.na(test$endsec)] <- test$startsec[is.na(test$endsec)]+test$duration[is.na(test$endsec)]


test$startdate=NULL
test$enddate=NULL
test$starttime=NULL
test$endtime=NULL






test$clear <- training$clearm[match(test$id, training$id)]
test$difficult <- training$difficultm[match(test$id, training$id)]
test$thinking <- training$thinkingm[match(test$id, training$id)]
test$enjoy <- training$enjoym[match(test$id, training$id)]
test$interestingm <- training$interestingm[match(test$id, training$id)]




test$interestingm<-as.ordered(test$interestingm)
test$clear<-as.ordered(test$clear)
test$enjoy<-as.ordered(test$enjoy)
test$difficult<-as.ordered(test$difficult)
test$thinking<-as.ordered(test$thinking)




test$year<-as.factor(test$year)
test$startday<-as.ordered(test$startday)
test$year<-as.factor(test$month)


test <- merge(test, info, by.x="id", all.x=TRUE, sort=FALSE)


##################################






test<-split(test,is.na(test$age))
test1<-test[['TRUE']]
test2<-test[['FALSE']]


test11=setdiff(test1$id,training$id) #ids in test1 not in traindata
test11=data.frame(test11)
test11=rename(test11,c("test11"="id"))
test11<- merge(test11, test1, by.x="id", sort=FALSE)


test12=intersect(test1$id,training$id) #ids in both test1 and traindata
test12=data.frame(test12)
test12=rename(test12,c("test12"="id"))
test12<- merge(test12, test1, by.x="id", sort=FALSE)


test21=setdiff(test2$id,training$id) #ids in test2 not in traindata
test21=data.frame(test21)
test21=rename(test21,c("test21"="id"))
test21<- merge(test21, test2, by.x="id", sort=FALSE)


test22=intersect(test2$id,training$id) #ids in both test2 and traindata
test22=data.frame(test22)
test22=rename(test22,c("test22"="id"))
test22<- merge(test22, test2, by.y="id", sort=FALSE)


training1<-split(training,is.na(training$age))
training2<-training1[['FALSE']]
training3<-training1[['TRUE']]

	


# training3$interesting <- factor(training$interesting)
# training3$interesting<-as.ordered(training$interesting)

# training3 <- training3[complete.cases(training3), ]
ctrl <- trainControl(classProbs=TRUE)# )# classProbs=TRUE)
# rf11<-train( interesting ~ ., data = training3, method='gbm',  trctrl= ctrl, tunelength=1)
month <- training3$month
year <- training3$year
interesting <- training3$interesting# X2 <- 
interesting <- factor(interesting)
# interesting <- as.ordered(interesting)
duration <- training3$duration  
core <- training3$core
startday <- training3$startday
trainingcheck <- data.frame(interesting, month, year, duration, core, startday)

# month <- test11$month 
# year <- test11$year 
# interesting <- test11$interesting
# duration <- test11$duration 
# core <- test11$core 
# startday <- test11$startday
# testcheck <- data.frame(interesting, month, year, duration, core, startday)
# write.csv(test11, file = "madarchod_test.csv")
# 
# variables <- data.frame( training3$month, training3$year, training3$duration, training3$core, training3$startday)
# gbmFit <- train(x=variables, y = training3$interesting, method = "gbm", trControl = ctrl, tunelength=1)
# # gbmFit <- train(variables, training3$interesting , metric = "Accuracy", maximize = TRUE, method = "gbm", trControl = ctrl, tunelength=1, tuneGrid = data.frame(n.trees = 5, interaction.depth=5, shrinkage=.1, n.minobsinnode=3))

# make.names(levels(trainingcheck$interesting))

# print(levels(trainingcheck$interesting))
revalue(trainingcheck$interesting, c("1" = "X1")) -> trainingcheck$interesting
revalue(trainingcheck$interesting, c("2" = "X2")) -> trainingcheck$interesting
revalue(trainingcheck$interesting, c("3" = "X3")) -> trainingcheck$interesting
revalue(trainingcheck$interesting, c("4" = "X4")) -> trainingcheck$interesting
revalue(trainingcheck$interesting, c("5" = "X5")) -> trainingcheck$interesting# # levels(test11$interesting) <- make.names(levels(factor(test11$interesting)))
write.csv(trainingcheck, file = "madarchod_trainincheck.csv")
# # levels(training$target) <- make.names(levels(factor(all.dat$target)))

# test11$interesting <- factor(test11$interesting)
# # rename(test11, c('interesting'='X')) 
# test11$interesting<-gsub(1,'X1' ,test11$interesting)
# test11$interesting<-gsub(2,'X2', test11$interesting)
# test11$interesting<-gsub(3,'X3', test11$interesting)
# test11$interesting<-gsub(4,'X4', test11$interesting)
# test11$interesting<-gsub(5,'X5', test11$interesting)


# test11$interesting <- str(test11$interesting)
# trainingcheck$interesting<-(trainingcheck$interesting==1)
# test11$X2<-gsub('2','X2', test11$interesting)
# test11$X3<-gsub('3','X3', test11$interesting)
# test11$X4<-gsub('4','X4', test11$interesting)
# test11$X5<-gsub('5','X5', test11$interesting)

# make.names(levels(trainingcheck$interesting))
gbmfit <- train(interesting~month+year+duration+core+startday, data = trainingcheck, method = "gbm", trControl = ctrl, tuneLength = 1, tuneGrid = data.frame(n.trees = 1,  interaction.depth=1, shrinkage=.1, n.minobsinnode=10))
# # # gbmfit <- gbm(interesting~ ., data = trainingcheck, n.trees=10)

# # warnings()
p11  = predict(gbmfit, newdata=test11, type='prob')

# # # p11probs <- predict(gbmfit, newdata=test11, type='prob')
p11 <- data.frame(test11$obs, p11) 
p11<-rename(p11, c("test11.obs"="obs", "X1"="interesting1", "X2"="interesting2" ,"X3"="interesting3", "X4"="interesting4", "X5"="interesting5"))

write.csv(p11, file = "submission1.csv",row.names=FALSE)

# # rf12<-randomForest( interesting ~ month+year+ampm+startdatw+duration+core+startday+interestingm+enjoy+difficult+thinking+clear, data = training3, ntree=500, importance=TRUE)
# # p12=predict(rf12, test12, type ="prob")

# rf21<-randomForest( interesting ~ month+duration+year+startday+core+age+agecat+gender+educ+grosscat+simpc+occupation, data = training2, ntree=500, importance=TRUE)
# p21=predict(rf21, test21, type ="prob")


# rf22<-randomForest( interesting ~ month+ampm+startdatw+duration+year+startday+core+age+agecat+gender+educ+grosscat+simpc+occupation+interestingm+clear+thinking+difficult+enjoy, data = training2, ntree=500, importance=TRUE)
# p22=predict(rf22, test22, type ="prob")
	

# p11<-(p11+0.3)/((0.3*5)+1)


# # p12<-(p12+0.06)/((0.06*5)+1)
# # p12 <- data.frame( test12$obs, p12)
# # p12<-rename(p12, c("test12.obs"="obs", "X1"="interesting1", "X2"="interesting2" ,"X3"="interesting3", "X4"="interesting4", "X5"="interesting5"))


# # p21<-(p21+0.05)/((0.05*5)+1)
# # p21 <- data.frame( test21$obs, p21)
# # p21<-rename(p21, c("test21.obs"="obs", "X1"="interesting1", "X2"="interesting2" ,"X3"="interesting3", "X4"="interesting4", "X5"="interesting5"))


# # p22<-(p22+0.04)/((0.04*5)+1)
# # p22 <- data.frame( test22$obs, p22)
# # p22<-rename(p22, c("test22.obs"="obs", "X1"="interesting1", "X2"="interesting2" ,"X3"="interesting3", "X4"="interesting4", "X5"="interesting5"))




# # p <- rbind(p11, p12,p21,p22)
# # p <- p[ order(p$obs), ]


# # submission <-p


# write.csv(submission, file = "submission1.csv",row.names=FALSE)




